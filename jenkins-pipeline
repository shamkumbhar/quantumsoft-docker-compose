pipeline {
    agent {label 'agent'}
    environment {
        FRONTEND_IMAGE = 'tejas2506/frontend:t1'
        BACKEND_IMAGE  = 'tejas2506/backend:t1'
        DOCKERHUB_CREDENTIALS = 'docker'
    }
 
    stages {
        stage('git clone') {
            steps {
                git branch: 'main', url: 'https://github.com/tejas-b25/quantumsoft-docker-compose.git'
            }
        }
        stage('Install Docker Compose') {
            steps {
                sh '''
                    sudo apt update
                    sudo apt install -y docker.io curl
                    sudo systemctl enable docker
                    sudo systemctl start docker
                    sudo newgrp docker
 
                    mkdir -p ~/.docker/cli-plugins
                    curl -SL https://github.com/docker/compose/releases/latest/download/docker-compose-linux-x86_64 \
                      -o ~/.docker/cli-plugins/docker-compose
                    chmod +x ~/.docker/cli-plugins/docker-compose
 
                    docker --version
                    docker compose version || true
                '''
            }
        }
        stage('Docker Login') {
            steps {
                withCredentials([usernamePassword(credentialsId: "${DOCKERHUB_CREDENTIALS}", usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh '''
                    echo "$DOCKER_PASS" | sudo docker login -u "$DOCKER_USER" --password-stdin
                    '''
                }
            }
        }
        stage('Build & Push Backend Image') {
            steps {
                    sh '''
                    docker build -t $BACKEND_IMAGE .
                    docker push $BACKEND_IMAGE
                    '''
            }
        }
        stage('Build & Push Frontend Image') {
            steps {
                dir('qfrontend') {
                    sh '''
                    docker build -t $FRONTEND_IMAGE .
                    docker push $FRONTEND_IMAGE
                    '''
                }
            }
        }
        stage('Deployment') {
            steps {
            withCredentials([usernamePassword(credentialsId: "${DOCKERHUB_CREDENTIALS}", usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
            sh '''
            echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
            docker compose up -d
            '''
             }
          }
       }
    }
}
